/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HomeRouteImport } from './routes/home'
import { Route as CharactersIndexRouteImport } from './routes/characters/index'
import { Route as CharactersCharacterIdRouteImport } from './routes/characters/$characterId'

const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const CharactersIndexRoute = CharactersIndexRouteImport.update({
  id: '/characters/',
  path: '/characters/',
  getParentRoute: () => rootRouteImport,
} as any)
const CharactersCharacterIdRoute = CharactersCharacterIdRouteImport.update({
  id: '/characters/$characterId',
  path: '/characters/$characterId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/home': typeof HomeRoute
  '/characters/$characterId': typeof CharactersCharacterIdRoute
  '/characters': typeof CharactersIndexRoute
}
export interface FileRoutesByTo {
  '/home': typeof HomeRoute
  '/characters/$characterId': typeof CharactersCharacterIdRoute
  '/characters': typeof CharactersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/home': typeof HomeRoute
  '/characters/$characterId': typeof CharactersCharacterIdRoute
  '/characters/': typeof CharactersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/home' | '/characters/$characterId' | '/characters'
  fileRoutesByTo: FileRoutesByTo
  to: '/home' | '/characters/$characterId' | '/characters'
  id: '__root__' | '/home' | '/characters/$characterId' | '/characters/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HomeRoute: typeof HomeRoute
  CharactersCharacterIdRoute: typeof CharactersCharacterIdRoute
  CharactersIndexRoute: typeof CharactersIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/characters/': {
      id: '/characters/'
      path: '/characters'
      fullPath: '/characters'
      preLoaderRoute: typeof CharactersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/characters/$characterId': {
      id: '/characters/$characterId'
      path: '/characters/$characterId'
      fullPath: '/characters/$characterId'
      preLoaderRoute: typeof CharactersCharacterIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  HomeRoute: HomeRoute,
  CharactersCharacterIdRoute: CharactersCharacterIdRoute,
  CharactersIndexRoute: CharactersIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
